{"version":3,"sources":["task-1.js","task-2.js","task-3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","result","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","id","logSuccess","logError","warn","amount","catch"],"mappings":";AAAA,IAAMA,EAAQ,SAAAC,GACL,OAAA,IAAIC,QAAQ,SAACC,GAClBC,WAAW,WACTD,EAAQF,IACPA,MAIDI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ;;ACShB,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAtBD,IAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACxBb,OAAAA,QAAQC,QACVW,EAASE,IAAI,SAAAC,GACVA,OAAAA,EAAKN,OAASI,EAAgBE,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCL,QAASK,EAAKL,SAAWK,MAUzE,SAASZ,EAAOa,GACZX,QAAQY,MAAMD,GAJlBL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;AClBnC,IAAMe,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,GACjB3B,IAAAA,EAAQoB,EAA0B,IAAK,KAEtC,OAAA,IAAIlB,QAAQ,SAACC,EAASyB,GAC3BxB,WAAW,WACUmB,KAAKE,SAAW,GAGjCtB,EAAQwB,EAAYE,GAAI7B,GAExB4B,EAAOD,EAAYE,OAGtB7B,IAoBL,SAAS8B,EAAWD,EAAIvB,GACtBC,QAAQC,IAAmBqB,eAAAA,OAAAA,EAAmBvB,kBAAAA,OAAAA,EAA9C,OAEF,SAASyB,EAASF,GAChBtB,QAAQyB,KAAqCH,gCAAAA,OAAAA,EAA7C,8BApBFH,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,KAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH;;ACjCT,aAFA,QAAA,YACA,QAAA,YACA,QAAA","file":"src.125e4616.js","sourceRoot":"..\\src","sourcesContent":["const delay = ms => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(ms);\r\n    }, ms);\r\n  }); \r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms","const users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n    return Promise.resolve(\r\n         allUsers.map(user =>\r\n            user.name === userName ? { ...user, active: !user.active } : user,\r\n        ),        \r\n    );\r\n\r\n    \r\n};\r\n\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);\r\n\r\nfunction logger(result) {\r\n    console.table(result);\r\n};","const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n\r\n  return new Promise((resolve, reject)=> {\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve(transaction.id, delay);\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    })\r\n  }, delay);\r\n};\r\n\r\n\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nfunction logSuccess(id, time){\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\nfunction logError(id){\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};","import './task-1';\r\nimport './task-2';\r\nimport './task-3';\r\n\r\n"]}